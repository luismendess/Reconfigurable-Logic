library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

-- Entidade do multiplexador
entity projeto4_placa is
    port (
        SW      : in  std_logic_vector(9 downto 0); -- Chaves como entradas e seleção
        LEDR    : out std_logic_vector(1 downto 0)  -- LEDs como saída
    );
end entity;

-- Arquitetura
architecture projeto4_placa of projeto4_placa is
    -- Declaração de constantes para facilitar a leitura
    constant M : integer := 2; -- 2 bits por entrada
    constant S : integer := 2; -- 2 bits de seleção
    constant N : integer := 4; -- 4 entradas (2^S)
    
    -- Sinais internos
    signal Entradas : std_logic_vector((N*M) - 1 downto 0); -- Entradas concatenadas
    signal Selecao  : std_logic_vector(S-1 downto 0);       -- Bits de seleção
    signal Saida    : std_logic_vector(M-1 downto 0);       -- Saída selecionada
begin
    -- Mapear as entradas a partir das chaves
    Entradas <= SW(7 downto 0); -- SW[7:0] contém 4 entradas de 2 bits
    Selecao  <= SW(9 downto 8); -- SW[9:8] para seleção

    -- Multiplexador
    process (Entradas, Selecao)
        variable Index : integer;
    begin
        Index := to_integer(unsigned(Selecao));
        Saida <= Entradas(Index*M + M-1 downto Index*M);
    end process;

    -- Mapear a saída para os LEDs
    LEDR <= Saida; -- Saída de 2 bits nos LEDs
end architecture;
